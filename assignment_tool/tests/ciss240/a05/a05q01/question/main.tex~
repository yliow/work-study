Write a program that prompts the user for three integers for the lengths of a
triangle and display whether the three integers form the sides of a
right-angled triangle: it will display \verb!1! if the three sides represents
a right-angled triangle and \verb!0! otherwise. The third integer entered is
the largest of the three.

{\bf Test 1:}
\begin{console}[commandchars=\\\{\}]
\underline{3 4 5}
1
\end{console}

{\bf Test 2:}
\begin{console}[commandchars=\\\{\}]
\underline{3 4 6}
0
\end{console}

[Hint: Let $a$, $b$, $c$ be the length of the sides of a right-angled triangle
($c$ being the longest). If the sum of the squares of $a$ and $b$ equals the
square of $c$, then the triangle is a right-angled triangle. You need to
translate the above to a C++ boolean expression. This is the Pythagorean
theorem. Your program should print the boolean value of whether $a$, $b$ and
$c$ form a right-angled triangle. Recall that the \verb!true! boolean value
when printed is \verb!1! and \verb!false! is printed as \verb!0!. This is
exactly what the above requires. You can either print the boolean value of a
boolean expression:
\begin{verbatim}
            std::cout << [some boolean expression] << '\n';
\end{verbatim}
or you can store the boolean value in a boolean variable (with a reasonable
name) and print the value of the variable:
\begin{verbatim}
            bool is_rt_angle_triangle = [some boolean expression];
            std::cout << is_rt_angle_triangle << '\n';
\end{verbatim}
]
