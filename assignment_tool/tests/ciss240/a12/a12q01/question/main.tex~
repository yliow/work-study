[OMITTED -- SEE NOTES]

First write a function \verb!isprime()! such that \verb!isprime(n)! returns
\verb!true! when \verb!n! is prime and \verb!false! when \verb!n! is not a
prime. Here's the skeleton code which you MUST use. Several test cases are
included. Note that the integers $0$ and $1$ are NOT primes. Negative integers
are also not primes.
\begin{console}
#include <iostream>


bool isprime(int n)
{
    ... your code here ...
}


int main()
{
    int i;
    std::cin >> i;

    std::cout << i << (isprime(i) ? " is prime" : " is not prime") 
              << std::endl;

    return 0;
}
\end{console}

\textbf{Test 1:}
\begin{Verbatim}[frame=single, commandchars=\\\{\}]
\underline{-3}
-3 is not prime 
\end{Verbatim}

\textbf{Test 2:}
\begin{Verbatim}[frame=single, commandchars=\\\{\}]
\underline{0}
0 is not prime 
\end{Verbatim}

\textbf{Test 3:}
\begin{Verbatim}[frame=single, commandchars=\\\{\}]
\underline{1}
1 is not prime 
\end{Verbatim}

\textbf{Test 4:}
\begin{Verbatim}[frame=single, commandchars=\\\{\}]
\underline{2}
2 is prime 
\end{Verbatim}

\textbf{Test 5:}
\begin{Verbatim}[frame=single, commandchars=\\\{\}]
\underline{3}
3 is prime 
\end{Verbatim}

\textbf{Test 6:}
\begin{Verbatim}[frame=single, commandchars=\\\{\}]
\underline{12}
12 is not prime 
\end{Verbatim}

\textbf{Test 7:}
\begin{Verbatim}[frame=single, commandchars=\\\{\}]
\underline{23}
23 is prime 
\end{Verbatim}
