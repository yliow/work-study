\section{Chomsky Normal Form}

A grammar is in \defterm{Chomsky Normal Form} if every production
is of the form
\begin{align*}
 A &\rightarrow BC &\,\,\,\,\,\text{$A,B,C$ are variables} \\
 A &\rightarrow a  &\,\,\,\,\,\text{$A$ is a variable and $a$ is a
 terminal} \\
\end{align*}
Note that $\ep$ is not in the language generated by such a
language.

For a CFL language that does containing $\ep$, you remove $\ep$ from the
language, analyze {\it that} language. Once you're done, you add
production $S' \rightarrow S\,|\, \ep$ to the grammar. This is
{\it almost} a Chomsky Normal Form.


The Chomsky Normal Form is important because it gives rise to
efficient algorithms. For instance we will use it in the CYK
(Cocke-Younger-Kasami) algorithm which tests if a string can be
generated by a grammar; the CYK algorithm also produces the actual
derivation for that string.

\begin{thm} Every CFL that does not have the $\ep$ string has a
CFG in Chomsky Normal Form.
\end{thm}

{\it Proof.}
Suppose $G$ is the CFG for a language $L$ without $\ep$. We remove
the $\ep$-productions, the unit productions, and the useless
symbols.

Now let's look at the productions $A \rightarrow X_1 \cdots X_n$
($n\geq 1$) where $X_i$ are either variables or terminals. 
For the case of $n=1$, the production $A \rightarrow
X_1$ is already of the right form, so we don't have to anything to
it. (Why??)

What about the case of $n \geq 2$? What would you replace
\[
 A \rightarrow X_1 \cdots X_n
\]
with so that the resulting grammar generates the same language and
the new productions are in Chomsky Normal Form?

Let's look at the case of $A \rightarrow X_1 X_2$. What are the
possible cases for $X_1$ and $X_2$?

What about the case say $A \rightarrow BcC$ where $B,C$ are
variables and $c$ is a terminal. What would you do?

\vfill\eject

In general, there are two more steps in converting the grammar to
a Chomskey Normal Form.
\begin{mylist}
 \item[(1)] Convert the grammar to one involving productions of
 the form $A \rightarrow a$ ($a$ terminal) and $A \rightarrow X_1
 \cdots X_n$ where $X_i$ are {\it variables}.
 \item[(2)] Convert the productions $A \rightarrow X_1 \cdots X_n$
 to those involving $A \rightarrow A \rightarrow YZ$ where $Y,Z$
 are variables.
\end{mylist}

Here's step 1. Let $A \rightarrow X_1 \ldots X_n$.
\begin{mylist}
\item[(1.1)] If $X_i$ is a terminal symbol, create a variable for
it, say $Y_i$. Otherwise $Y_i$ is the same as $X_i$.  Replace $A
\rightarrow X_1 \cdots X_n$ with $A \rightarrow Y_1 \cdots Y_n$.
\item[(1.2)] Add productions $Y_i \rightarrow X_i$ if $X_i$ is a
terminal.
\end{mylist}

That sounds complicated but it's actually very simple. 
Let's look at an example.
Suppose you look at the production
\[
 A \rightarrow BbCcdD
\]
where $A,B,C,D$ are variables and $b,c,d$ are terminals. 
If you follow the above recipe, you will get the following ...

You create the variables $V_b$, $V_c$, and $V_d$.
The above production
\[
 A \rightarrow BbCcdD
\]
can be replaced by 
\[
A \rightarrow BV_bCV_cV_dD
\] 
together with 
\begin{align*}
V_b &\rightarrow b \\
V_c &\rightarrow c \\
V_d &\rightarrow d
\end{align*}
The first new production
\[
A \rightarrow BV_bCV_cV_dD
\] 
is not allowed for Chomsky Normal Forms.
The others:
\begin{align*}
V_b &\rightarrow b \\
V_c &\rightarrow c \\
V_d &\rightarrow d
\end{align*}
are OK.
So we need to fix
\[
A \rightarrow BV_bCV_cV_dD
\] 
which is of the form $A \rightarrow \text{(bunch of variables)}$.

Now for step 2. We only need to consider productions of the form
$A \rightarrow X_1 \ldots X_n$ where $X_i$ are all variables.
Consider the case where $n>2$. (Why?) How would you replace
this production with? [Hint: $X_1 \cdots X_n = X_1 (X_2 \cdots
X_n)$].

Easy!!!

For instance for 
\[
A \rightarrow UVW
\]
where $U,V,W$ are variables just look at the product rule like this:
\[
A \rightarrow U(VW)
\]
You just create a variable $Z$ and replace the above with
\[
A \rightarrow UZ
\]
and
\[
Z \rightarrow VW
\]

Going back an earlier example, this production rule
\[
A \rightarrow BV_bCV_cV_dD
\] 
(which is not allowed in Chomsky normal form)
can replaced with the following rules:
\begin{align*}
A &\rightarrow BV_1 \\
V_1 &\rightarrow V_b V_2 \\
V_2 &\rightarrow C V_3 \\
V_3 &\rightarrow V_c V_4 \\
V_4 &\rightarrow V_d D
\end{align*}
which are allowed in Chomsky normal form.

That's it! Easy, right? 

\newpage

\begin{ex}
Convert the following grammar to Chomsky Normal Form:
\begin{align*}
 S &\rightarrow aA \,|\, bB \,|\, b \\
 A &\rightarrow Baa \,|\, ba \\
 B &\rightarrow bAAb \,|\, ab \\
\end{align*}
\end{ex}

