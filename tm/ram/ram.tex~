\subsection{RAM - random access machine}

Our TM moving on its input tape relatively: it moves to the left or right or
stay.
What if we allow the TM to go to the memory cell at any index
position?
(This is like a modern computer accessing a byte in its RAM at
any address location.)
Specifically, this TM has another tape called the register.
It contains the index that the read-write head should do to.
This means that the transition would look like this:
\[
\delta(q, c) = (q', c')
\]
where the register tape has $1^m$.
This means that if this random access is at state $q$ and the read-write
head is reading $c$ (say at index position $n$, then it overwrite the
$c$ at index position $n$ with $c'$, the read-write head moves to the
character at position $n$, and the machine is at state $q'$.
Let $\TM_{\operatorname{RAM}}$ denote the class of such machines.

\begin{ex}
  \begin{tightlist}
    \item Let $M \in \TM$. Construct $M' \in \TM_{\operatorname{RAM}}$
    such that $L(M') = L(M)$.
    \item Let $M' \in \TM_{\operatorname{RAM}}$.
    Construct $M \in \TM$ such that $L(M) = L(M')$.
  \end{tightlist}
\qed
\end{ex}

(More generally, a random access machine can have more than one, but a
finite number of, register tapes.
In that case the transition would be $delta(q, c) = (q', c', i)$
where the position the read-write head should move to is on register
tape number $i$.)

1.
$M'$ must know the absolute position of the read-write head.
Therefore the input tape structure must be similar to this:
\[
\text{\texttt{\$}$1^n$\texttt{\#}$x_0 x_1 x_2 \cdots x_n$}
\]
where $1^n$ is the position of the read-write head in $\text{\$}x$.
For transition
\[
\delta(q, x_n) = (q', x_n', R)
\]
when the read-write head is at position $n$, $M'$ must
change its input tape to this:
\[
\text{\texttt{\$}$1^{n+1}$\texttt{\#}x}
\]
The read-write head 
