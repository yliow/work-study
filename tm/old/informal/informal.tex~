\section{Turing Machines}


Informally, a Turing machine (TM) is like a DFA or a PDA except for
the following:
\begin{itemize}
\item For the DFA (and PDA), the machines read the input string one
 character at a time from the leftmost character to the rightmost. A
 TM can also read the input one character at a time. However
 the input string should be thought of as being written on an
 infinitely long tape; you should think of the tape as being padded
 infinitely to the right with blanks. The TM can actually write to it
 as well. Therefore you should think of the TM as having a read/write
 head that moves along an infinitely long string.
 Furthermore, the read/write head can move either
 left or right or it can also stay. The only restriction is that it
 must stay on the infinitely tape.
\item For the DFA, acceptance is
 determined by what the state the machine is in once the string is
 completely read. For the TM, since the input string is written on an
 infinite tape, there is really no end-of-string. Therefore for a TM, a string is
 accepted if the machine enters an accepting state, regardless of the
 position of the read/write head.
\end{itemize}

Even without a formal definition of a TM, you probably know by now
that the most important thing about running the TM is that you need
to know what happens when the machine is in a particular state and
it is about to read a particular character. What if the machine
capable of doing? Well, obviously it has to go to another (possibly
the same) state. It can overwrite the character it is reading; this
is sort of like the PDA. Furthermore it can move it's read/write
head either to the left or right or it stays. So the transition
function should look like:

\[\delta(q, a) = (p, b, D)\]

where $q$ and $p$ are states, $a$ and $b$ are the allowable
characters on the infinite tape and $D$ refers to the direction
moved by the read/write head. $D$ can take values $L$ (for left),
$S$ (for stay) and $R$ (for right).
