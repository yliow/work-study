Write a function
\begin{console}[commandchars=\\\{\}]
Fraction & operator/=(Fraction &, const Fraction &);
\end{console}

So that you can execute the following code:
\begin{console}
Fraction f = get_Fraction(1, 4);
Fraction g = get_Fraction(1, 2);

f /= g; // same effect as f = f / g;
std::cout << f << std::endl;

(f /= g) /= g; // same effect as f = f / g followed by f = f / g
std::cout << f << std::endl;
\end{console}

Here's the test code:
\begin{console}
void test_diveq()
{
    int n0, d0; 
    int n1, d1;
    std::cin >> n0 >> d0;
    std::cin >> n1 >> d0;
    Fraction f = get_Fraction(n0, d0);
    Fraction g = get_Fraction(n1, d1);
    f /= g;
    std::cout << f << std::endl;
}
\end{console}
This is test option 20.
