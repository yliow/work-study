Vectors are extremely important.
A 2-dimensional vector in math looks like this
\[
\langle 2, 3 \rangle
\]
You can think of 2 as the $x$-coordinate value of the vector
and 3 as the $y$-coordinate value of the vector.

Vectors are used in sciences and therefore appear in CS and Math.
In particular, they appear in Physics and therefore vectors are
extremely important in physical simulations,
scientific computations, and games.

One important operation on vectors is vector addition.
Here's an example: 
\[
\langle 2, 3 \rangle
+
\langle 1, 4 \rangle
=
\langle 3, 7 \rangle
\]
In other words, you just add the value in the corresponding.

Write a function \verb!vec_add()! that adds 2-dimentionals vectors
of integer values.
I have provided a version that uses references for parameters.
Note that the two versions have the same function name.
That is perfectly fine for the compiler since their function
signatures are different -- the function name \verb!vec_add!
is overloaded.

\begin{console}
#include <iostream>


void vec_add(int & x0, int & y0, 
             int x1, int y1,
             int x2, int y2)
{
    x0 = x1 + x2;
    y0 = y1 + y2;
}


void vec_add(int * x0, int * y0, 
             int x1, int y1,
             int x2, int y2)
{
    // TO BE COMPLETED.
}


int main()
{
    int x0, y0, x1, y1, x2, y2;
    std::cin >> x1 >> y1 >> x2 >> y2;

    int old_x0 = x0, old_y0 = y;

    vec_add(x0, y0, x1, y1, x2, y2);
    std::cout << '<' << x0 << ',' << y0 << ">    ";

    x0 = old_x0;
    y0 = old_y0;

    // CALL THE SECOND VERSION OF vec_add THAT HAS POINTERS
    // AS PARAMETERS.

    std::cout << '<' << x0 << ',' << y0 << ">\n";

    return 0;
}
\end{console}
