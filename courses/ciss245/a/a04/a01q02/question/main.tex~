This is a practice on using pointers and the free store.

The function \verb!pi()! (not the number \verb!pi = 3.14159...!)
counts the number of primes, i.e.,
$\pi(x)$ computes the numbers of primes less than or equal to \verb$x$.
Note that \verb!x! is a \verb!double!.

In function \verb!pi()!, other than variable \verb!ret!, all
other variables must be pointers.

(Note: Again, this is a practice on using pointers and the memory heap.
It is more natural to use integer variables rather than pointers
in your function.)

The following skeleton code must be used.
Do not modify \verb!main()!.

\begin{console}
#include <iostream>

int pi(double x)
{
    int * numprimes;
    // Declare pointers and allocate memory for all of them

    // Compute number of primes <= x and store at integer that
    // numprimes points to.

    int ret = numprimes;
    // Deallocate memory for all pointers declared

    return ret;
}

int main()
{
    double x;
    std::cin >> x;
    std::cout << pi(x) << '\n';
}
\end{console}
