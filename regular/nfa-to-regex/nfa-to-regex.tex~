\section{NFA to Regex}

The algorithm for converting an NFA $N$ to a regex $r$ such that
\[
L(N) = L(r)
\]
is actually pretty simple.
Here's the algorithm.

We're going to build a new NFA. 
Let's call this $N'$.
In fact this NFA will not be exactly an NFA.
$N'$ will initially be $N$.
We will make some changes.

First, in $N'$, 
you create a new node, say $i$ (for initial state) and join $i$ to 
the start state of $N$ with an $\ep$--transition.

Second, 
you create a new node, say $a$ (for accept state) and join 
all accept state of $N$ to $a$ by $\ep$--transitions.
You then make the accept states from $N$ be non-accept states in $N'$.

Third,
if from two states $q$, $q'$ we see $a,b$, we
replace this transition label to $a \cup b$, i.e., a regular expression.
More generally if you see a list of characters from $\Sigma$ of $N$,
you replace it with the regular expression of the union of these characters.

We're not done yet, but let's look at an example right away.
Consider this NFA $N$:
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (A) at (  0,  0) {$q_0$};
\node[state,accepting] (C) at (  2, -2) {$q_2$};
\node[state,accepting] (B) at (  4,  0) {$q_1$};

\path[->]
(A) edge [bend left=10,pos=0.5,above] node {$a$} (B)
(A) edge [below] node {$\ep,b$\ \ \ \ \ } (C)
(B) edge [bend left=10,pos=0.5] node {$a$} (A)
(B) edge [loop above] node {$b$} ()
(C) edge [below] node {\ \ $a$} (B)
;
\end{tikzpicture}
\end{center}
The new $N'$ (again, I'm not done changing it yet):
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (A) at (  0,  0) {$q_0$};
\node[state] (C) at (  2, -2) {$q_2$};
\node[state] (B) at (  4,  0) {$q_1$};

\node[state,initial] (i) at (  -4,  0) {i};
\node[state,accepting] (a) at (  8,  0) {a};

\path[->]
(i) edge node {$\ep$} (A)
(C) edge [below] node {$\ep$} (a)
(B) edge node {$\ep$} (a)
(A) edge [bend left=10,pos=0.5,above] node {$a$} (B)
(A) edge [below] node {$\ep \cup b$\ \ \ \ \ \ } (C)
(B) edge [bend left=10,pos=0.5] node {$a$} (A)
(B) edge [loop above] node {$b$} ()
(C) edge [below] node {\ $a$} (B)
;
\end{tikzpicture}
\end{center}

Note that the state diagram is now
\textit{not} an NFA since
the transitions are labeled with \textit{regular expressions}.

Let's call these {\it generalized} NFAs.
The operation of such animals are obvious:
You run them more or less like NFAs.
If you read say a character $a$, then you follow transitions labeled with $r$
if $a \in L(r)$.
For instance you are allowed to following transitions labeled $a$ or
$a \cup b$ or $a^* \cup b$, etc.

It's clear how acceptance should be defined for such generalized NFAs.

By the way, if there's no transition from say $q$ to $q'$ in $N$, 
in the new generalized NFA, we  
add a transition labeled $\emptyset$ from $q$ to $q'$.
This means that you cannot go from $q$ to $q'$ 
since the language $L(\emptyset)$ is $\emptyset$.

Now you might ask: Why in the world would you want to make
things even more complicated?
First we have DFA.
Then we have NFA.
And now ... {\it generalized} NFA?!?

The reason is the same reason for generalizing DFA to NFA.
The NFA gives us a great deal of flexibility when compared against the DFA.
What about from NFA to generalized NFA?

If an NFA has a transition from $q$ to $q'$ labels $a,b$,
then there are actually two transitions, one labeled $a$ and one
labeled $b$.
In the case of the corresponding generalized NFA,
there is only one transition labeled $a \cup b$.

Here's the point: It allows us to {\it simplify} NFAs.
The above shows us that two transitions become one.
Even more importantly, generalized NFA actually also provides us with the
flexibility of simplifying states!!!

How is that?

Suppose you have a transition from $q$ to $q'$ labeled $a$
and there's a transition from $q'$ to $q''$ labeled $b$.
Do you see that it's the same as combining the two transitions to one
so that there's only one transition from $q$ to $q''$ labeled $ab$.
If no other transitions passed through $q'$, do you see that 
now $q'$ is useless and can be thrown away?

The main idea of the construction is to continually 
choose a node $q$ in the generalized NFA other than $i$ and $a$
and remove $q$ by \lq\lq redirecting traffic flow'' 
without changing the language accepted by the new generalized NFA.

Let's look at an example.
Suppose in a generalized NFA we have the following 3 states 
(there might be more):
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (q0) at (0,  0) {$q$};
\node[state] (q1) at (4,  0) {$q'$};
\node[state] (q2) at (2,  -2) {$q''$};

\path[->]
(q0) edge [below] node {$a \cup b$\ \ \ \ \ \ \ \ \ \ \ \ \ } (q2)
(q2) edge [below] node {$ab$} (q1)
;
\end{tikzpicture}
\end{center}
Clearly this can be replaced by
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (q0) at (0,  0) {$q$};
\node[state] (q1) at (4,  0) {$q'$};
\node[state] (q2) at (2,  -2) {$q''$};

\path[->]
(q0) edge node {$(a \cup b)(ab)$} (q1)
;
\end{tikzpicture}
\end{center}

Wait ... what if there's \lq\lq traffic'' going from $q''$ to $q''$
, i.e., a loop?
Say it's the generalized NFA before traffic redirection is this:
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (q0) at (0,  0) {$q$};
\node[state] (q1) at (4,  0) {$q'$};
\node[state] (q2) at (2,  -2) {$q''$};

\path[->]
(q0) edge [below] node {$a \cup b$} (q2)
(q2) edge [below] node {$ab$} (q1)
(q2) edge [loop below] node {$b$} ()
;
\end{tikzpicture}
\end{center}
So the total \lq\lq traffic'' going from $q$ to $q'$
through $q''$ is $(a \cup b)(b)^*(ab)$,
allowing the traffic from $q''$ to itself to loop as many times as we like
(include none).
And we get this simplification:
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (q0) at (0,  0) {$q$};
\node[state] (q1) at (4,  0) {$q'$};
\node[state] (q2) at (2,  -2) {$q''$};

\path[->]
(q0) edge node {$(a \cup b)(b)^*(ab)$} (q1)
;
\end{tikzpicture}
\end{center}

Wait a minute ... what if there's already a transition from 
$q$ to $q'$? Say
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (q0) at (0,  0) {$q$};
\node[state] (q1) at (4,  0) {$q'$};
\node[state] (q2) at (2,  -2) {$q''$};

\path[->]
(q0) edge [below] node {$a \cup b$ \ \ \ \ \ } (q2)
(q0) edge [below] node {$a$} (q1)
(q2) edge [below] node {$ab$} (q1)
(q2) edge [loop below] node {$b$} ()
;
\end{tikzpicture}
\end{center}
In that case, the combined traffic from $q$ to $q'$ must be 
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (q0) at (-0.5,  0) {$q$};
\node[state] (q1) at (4.5,  0) {$q'$};
\node[state] (q2) at (2,  -2) {$q''$};

\path[->]
(q0) edge node {$(a \cup b)(b)^*(ab) \cup a$} (q1)
;
\end{tikzpicture}
\end{center}
and in this case, the state $q''$ is redundant since now there is no
\lq\lq traffic'' going through $q''$.

If we do the above for {\it all} possible $q$ and $q'$, then
the resulting generalized NFA would have no transitions running through
this lonely and isolated $q''$.
This means that we can remove it.
Right?

That's the whole idea.

At the end of the \lq\lq state removal'' operation,
we would have only the two extra states $i$ and $a$ left.
The regular expression from $i$ to $a$ is the required regular expression.

Formally, after the initial construction of the GNFA,
you continually pick a state $q_{kill}$ which is not $i$ and not $a$
and for every $q_i \neq q_{kill}$ and $q_j \neq q_{kill}$,
with the following (relevant) regular expressions for transitions:
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (q0) at (0,  0) {$q_i$};
\node[state] (q1) at (4,  0) {$q_j$};
\node[state] (q2) at (2,  -2) {$q_{kill}$};

\path[->]
(q0) edge [below] node {$r_1$} (q2)
(q0) edge [above] node {$r_4$} (q1)
(q2) edge [below] node {\ \ $r_3$} (q1)
(q2) edge [loop below] node {$r_2$} ()
;
\end{tikzpicture}
\end{center}
then this part of the GNFA can be replaced by the following
without changing the resulting language accepted:
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (q0) at (0,  0) {$q_i$};
\node[state] (q1) at (4,  0) {$q_j$};
\node[state] (q2) at (2,  -2) {$q_{kill}$};

\path[->]
(q0) edge [above] node {$r_1r_2^*r_3 \cup r_4$} (q1)
;
\end{tikzpicture}
\end{center}


\newpage
\begin{ex}
Find a regex that accepts the same language as the following NFA:
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (A) at (  0,  0) {$q_0$};
\node[state,accepting] (C) at (  2, -2) {$q_2$};
\node[state] (B) at (  4,  0) {$q_1$};

\path[->]
(A) edge [bend left=10,pos=0.5,above] node {$a$} (B)
(A) edge [below] node {$\ep,b$} (C)
(B) edge [bend left=10,pos=0.5] node {$a$} (A)
(B) edge [loop above] node {$b$} ()
(C) edge [below] node {$a$} (B)
;
\end{tikzpicture}
\end{center}



\end{ex}

\newpage
There are two examples on the regex construction for NFAs in the
Sipser textbook. Make sure you try both of them.

The following are more examples.



\newpage


\textbf{Example.} 
Here's an NFA:

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,accepting] (q1) at (3,  0) {$q_1$};
\node[state,initial] (q0) at (0.0,  0) {$q_0$};
\node[state,accepting] (q3) at (9,  0) {$q_3$};
\node[state] (q2) at (6,  0) {$q_2$};
 
\path[->]
(q1) edge [loop above] node {$0,1$} ()
(q1) edge [bend left=0,pos=0.5,above] node {$1,\ep$} (q2)
(q2) edge [bend left=31,pos=0.5,below] node {$0$} (q0)
(q2) edge [bend left=0,pos=0.5,above] node {$0,1$} (q3)
(q3) edge [bend left=31,pos=0.5,below] node {$1$} (q1)

;
\end{tikzpicture}
\end{center}
    
Here's the initial GNFA:

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (2.0,  0) {$q_0$};
\node[state] (n2) at (4.0,  0) {$q_1$};
\node[state] (n3) at (6.0,  0) {$q_2$};
\node[state] (n4) at (8.0,  0) {$q_3$};
\node[state,accepting] (n5) at (10.0,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$\ep $} (n1)
(n2) edge [loop above] node {$0\cup 1$} ()
(n2) edge [bend left=0,pos=0.5,above] node {$1\cup \ep $} (n3)
(n2) edge [bend left=44,pos=0.5,above] node {$\ep $} (n5)
(n3) edge [bend left=31,pos=0.5,below] node {$0$} (n1)
(n3) edge [bend left=0,pos=0.5,above] node {$0\cup 1$} (n4)
(n4) edge [bend left=31,pos=0.5,below] node {$1$} (n2)
(n4) edge [bend left=0,pos=0.5,above] node {$\ep $} (n5)

;
\end{tikzpicture}
\end{center}
    


Each table below shows that computation of the resulting transistion
after removing a state $q_{kill}$.
In the third, fourth, and fifth columns,
\begin{align*}
r_1 &= \delta(q_i, q_{kill}) \\
r_2 &= \delta(q_{kill}, q_{kill}) \\
r_3 &= \delta(q_{kill}, q_j) \\
r_4 &= \delta(q_i, q_j)
\end{align*}


Removal of $q_{kill}$=$q_{0}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_1$ & $q_1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $0\cup 1$ & $0\cup 1$ \\
$q_1$ & $q_2$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $1\cup \ep $ & $1\cup \ep $ \\
$q_1$ & $q_3$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_1$ & $a$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\ep $ & $\ep $ \\
$q_2$ & $q_1$ & $0$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $q_2$ & $0$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $q_3$ & $0$ & $\emptyset $ & $\emptyset $ & $0\cup 1$ & $0\cup 1$ \\
$q_2$ & $a$ & $0$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $q_1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $1$ & $1$ \\
$q_3$ & $q_2$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $q_3$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $a$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\ep $ & $\ep $ \\
$i$ & $q_1$ & $\ep $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_2$ & $\ep $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_3$ & $\ep $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $a$ & $\ep $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (4.0,  0) {$q_1$};
\node[state] (n2) at (8.0,  0) {$q_2$};
\node[state] (n3) at (12.0,  0) {$q_3$};
\node[state,accepting] (n4) at (16.0,  0) {a};

\path[->]
(n1) edge [loop above] node {$0\cup 1$} ()
(n1) edge [bend left=0,pos=0.5,above] node {$1\cup \ep $} (n2)
(n1) edge [bend left=44,pos=0.5,above] node {$\ep $} (n4)
(n2) edge [bend left=0,pos=0.5,above] node {$0\cup 1$} (n3)
(n3) edge [bend left=31,pos=0.5,below] node {$1$} (n1)
(n3) edge [bend left=0,pos=0.5,above] node {$\ep $} (n4)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{1}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_2$ & $q_2$ & $\emptyset $ & $0\cup 1$ & $1\cup \ep $ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $q_3$ & $\emptyset $ & $0\cup 1$ & $\emptyset $ & $0\cup 1$ & $0\cup 1$ \\
$q_2$ & $a$ & $\emptyset $ & $0\cup 1$ & $\ep $ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $q_2$ & $1$ & $0\cup 1$ & $1\cup \ep $ & $\emptyset $ & $1(0\cup 1)^*(1\cup \ep )$ \\
$q_3$ & $q_3$ & $1$ & $0\cup 1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $a$ & $1$ & $0\cup 1$ & $\ep $ & $\ep $ & $1(0\cup 1)^*\cup \ep $ \\
$i$ & $q_2$ & $\emptyset $ & $0\cup 1$ & $1\cup \ep $ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_3$ & $\emptyset $ & $0\cup 1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $a$ & $\emptyset $ & $0\cup 1$ & $\ep $ & $\emptyset $ & $\emptyset $ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (4.0,  0) {$q_2$};
\node[state] (n2) at (8.0,  0) {$q_3$};
\node[state,accepting] (n3) at (12.0,  0) {a};

\path[->]
(n1) edge [bend left=10,pos=0.5,above] node {$0\cup 1$} (n2)
(n2) edge [bend left=10,pos=0.5,below] node {$1(0\cup 1)^*(1\cup \ep )$} (n1)
(n2) edge [bend left=0,pos=0.5,above] node {$1(0\cup 1)^*\cup \ep $} (n3)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{2}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_3$ & $q_3$ & $1(0\cup 1)^*(1\cup \ep )$ & $\emptyset $ & $0\cup 1$ & $\emptyset $ & $1(0\cup 1)^*(1\cup \ep )(0\cup 1)$ \\
$q_3$ & $a$ & $1(0\cup 1)^*(1\cup \ep )$ & $\emptyset $ & $\emptyset $ & $1(0\cup 1)^*\cup \ep $ & $1(0\cup 1)^*\cup \ep $ \\
$i$ & $q_3$ & $\emptyset $ & $\emptyset $ & $0\cup 1$ & $\emptyset $ & $\emptyset $ \\
$i$ & $a$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (2.0,  0) {$q_3$};
\node[state,accepting] (n2) at (6,  0) {a};

\path[->]
(n1) edge [loop above] node {$1(0\cup 1)^*(1\cup \ep )(0\cup 1)$} ()
(n1) edge [bend left=0,pos=0.5,above] node {$1(0\cup 1)^*\cup \ep $} (n2)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{3}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$i$ & $a$ & $\emptyset $ & $1(0\cup 1)^*(1\cup \ep )(0\cup 1)$ & $1(0\cup 1)^*\cup \ep $ & $\emptyset $ & $\emptyset $ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state,accepting] (n1) at (2.0,  0) {a};

\path[->]

;
\end{tikzpicture}
\end{center}
    
Therefore the regex that generates the same language that
is accepted by the given NFA is
\[
\emptyset 
\]


\newpage


\textbf{Example.} Here's the NFA:

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,accepting] (q1) at (3,  0) {$q_1$};
\node[state,initial] (q0) at (0.0,  0) {$q_0$};
\node[state] (q3) at (9,  0) {$q_3$};
\node[state,accepting] (q2) at (6,  0) {$q_2$};

\path[->]
(q0) edge [loop above] node {$1$} ()
(q0) edge [bend left=31,pos=0.5,above] node {$\ep$} (q2)
(q0) edge [bend left=44,pos=0.5,above] node {$1$} (q3)
(q1) edge [bend left=0,pos=0.5,below] node {$1$} (q0)
(q1) edge [bend left=0,pos=0.5,above] node {$1$} (q2)
(q2) edge [bend left=31,pos=0.5,below] node {$1,\ep$} (q0)
(q2) edge [loop above] node {$1$} ()

;
\end{tikzpicture}
\end{center}
    
Here's the initial GNFA:

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (2.0,  0) {$q_0$};
\node[state] (n2) at (4.0,  0) {$q_1$};
\node[state] (n3) at (6.0,  0) {$q_2$};
\node[state] (n4) at (8.0,  0) {$q_3$};
\node[state,accepting] (n5) at (10.0,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$\ep $} (n1)
(n1) edge [loop above] node {$1$} ()
(n1) edge [bend left=31,pos=0.5,above] node {$\ep $} (n3)
(n1) edge [bend left=44,pos=0.5,above] node {$1$} (n4)
(n2) edge [bend left=0,pos=0.5,below] node {$1$} (n1)
(n2) edge [bend left=0,pos=0.5,above] node {$1$} (n3)
(n2) edge [bend left=44,pos=0.5,above] node {$\ep $} (n5)
(n3) edge [bend left=31,pos=0.5,below] node {$1\cup \ep $} (n1)
(n3) edge [loop above] node {$1$} ()
(n3) edge [bend left=31,pos=0.5,above] node {$\ep $} (n5)

;
\end{tikzpicture}
\end{center}
    


Each table below shows that computation of the resulting transistions
after removing a state $q_{kill}$.
In the third, fourth, and fifth columns,
\begin{align*}
r_1 &= \delta(q_i, q_{kill}) \\
r_2 &= \delta(q_{kill}, q_{kill}) \\
r_3 &= \delta(q_{kill}, q_j) \\
r_4 &= \delta(q_i, q_j)
\end{align*}


Removal of $q_{kill}$=$q_{0}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_1$ & $q_1$ & $1$ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_1$ & $q_2$ & $1$ & $1$ & $\ep $ & $1$ & $11^*\cup 1$ \\
$q_1$ & $q_3$ & $1$ & $1$ & $1$ & $\emptyset $ & $11^*1$ \\
$q_1$ & $a$ & $1$ & $1$ & $\emptyset $ & $\ep $ & $\ep $ \\
$q_2$ & $q_1$ & $1\cup \ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $q_2$ & $1\cup \ep $ & $1$ & $\ep $ & $1$ & $(1\cup \ep )1^*\cup 1$ \\
$q_2$ & $q_3$ & $1\cup \ep $ & $1$ & $1$ & $\emptyset $ & $(1\cup \ep )1^*1$ \\
$q_2$ & $a$ & $1\cup \ep $ & $1$ & $\emptyset $ & $\ep $ & $\ep $ \\
$q_3$ & $q_1$ & $\emptyset $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $q_2$ & $\emptyset $ & $1$ & $\ep $ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $q_3$ & $\emptyset $ & $1$ & $1$ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $a$ & $\emptyset $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_1$ & $\ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_2$ & $\ep $ & $1$ & $\ep $ & $\emptyset $ & $1^*$ \\
$i$ & $q_3$ & $\ep $ & $1$ & $1$ & $\emptyset $ & $1^*1$ \\
$i$ & $a$ & $\ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (1,  0) {i};
\node[state] (n1) at (4.0,  0) {$q_1$};
\node[state] (n2) at (8.0,  0) {$q_2$};
\node[state] (n3) at (12.0,  0) {$q_3$};
\node[state,accepting] (n4) at (15,  0) {a};

\path[->]
(n0) edge [bend left=31,pos=0.5,above] node {$1^*$} (n2)
(n0) edge [bend left=44,pos=0.5,above] node {$1^*1$} (n3)
(n1) edge [bend left=0,pos=0.5,above] node {$11^*\cup 1$} (n2)
(n1) edge [bend left=31,pos=0.5,above] node {$11^*1$} (n3)
(n1) edge [bend left=44,pos=0.5,above] node {$\ep $} (n4)
(n2) edge [loop below] node {$(1\cup \ep )1^*\cup 1$} ()
(n2) edge [bend left=0,pos=0.5,above] node {$(1\cup \ep )1^*1$} (n3)
(n2) edge [bend left=31,pos=0.5,above] node {$\ep $} (n4)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{1}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_2$ & $q_2$ & $\emptyset $ & $\emptyset $ & $11^*\cup 1$ & $(1\cup \ep )1^*\cup 1$ & $(1\cup \ep )1^*\cup 1$ \\
$q_2$ & $q_3$ & $\emptyset $ & $\emptyset $ & $11^*1$ & $(1\cup \ep )1^*1$ & $(1\cup \ep )1^*1$ \\
$q_2$ & $a$ & $\emptyset $ & $\emptyset $ & $\ep $ & $\ep $ & $\ep $ \\
$q_3$ & $q_2$ & $\emptyset $ & $\emptyset $ & $11^*\cup 1$ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $q_3$ & $\emptyset $ & $\emptyset $ & $11^*1$ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $a$ & $\emptyset $ & $\emptyset $ & $\ep $ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_2$ & $\emptyset $ & $\emptyset $ & $11^*\cup 1$ & $1^*$ & $1^*$ \\
$i$ & $q_3$ & $\emptyset $ & $\emptyset $ & $11^*1$ & $1^*1$ & $1^*1$ \\
$i$ & $a$ & $\emptyset $ & $\emptyset $ & $\ep $ & $\emptyset $ & $\emptyset $ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (4,  0) {$q_2$};
\node[state] (n2) at (8,  0) {$q_3$};
\node[state,accepting] (n3) at (12,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$1^*$} (n1)
(n0) edge [bend left=31,pos=0.5,above] node {$1^*1$} (n2)
(n1) edge [loop below] node {$(1\cup \ep )1^*\cup 1$} ()
(n1) edge [bend left=0,pos=0.5,above] node {$(1\cup \ep )1^*1$} (n2)
(n1) edge [bend left=31,pos=0.5,above] node {$\ep $} (n3)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{2}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_3$ & $q_3$ & $\emptyset $ & $(1\cup \ep )1^*\cup 1$ & $(1\cup \ep )1^*1$ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $a$ & $\emptyset $ & $(1\cup \ep )1^*\cup 1$ & $\ep $ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_3$ & $1^*$ & $(1\cup \ep )1^*\cup 1$ & $(1\cup \ep )1^*1$ & $1^*1$ & $1^*((1\cup \ep )1^*\cup 1)^*(1\cup \ep )1^*1\cup 1^*1$ \\
$i$ & $a$ & $1^*$ & $(1\cup \ep )1^*\cup 1$ & $\ep $ & $\emptyset $ & $1^*((1\cup \ep )1^*\cup 1)^*$ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (8.0,  0) {$q_3$};
\node[state,accepting] (n2) at (12.0,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$1^*((1\cup \ep )1^*\cup 1)^*(1\cup \ep )1^*1\cup 1^*1$} (n1)
(n0) edge [bend left=31,pos=0.5,above] node {$1^*((1\cup \ep )1^*\cup 1)^*$} (n2)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{3}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$i$ & $a$ & $1^*((1\cup \ep )1^*\cup 1)^*(1\cup \ep )1^*1\cup 1^*1$ & $\emptyset $ & $\emptyset $ & $1^*((1\cup \ep )1^*\cup 1)^*$ & $1^*((1\cup \ep )1^*\cup 1)^*$ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state,accepting] (n1) at (6.0,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$1^*((1\cup \ep )1^*\cup 1)^*$} (n1)

;
\end{tikzpicture}
\end{center}
    
Therefore the regex that generates the same language that
is accepted by the given NFA is
\[
1^*((1\cup \ep )1^*\cup 1)^*
\]
You can simplify the above regex as follows:
\begin{align*}
1^*((1\cup \ep )1^*\cup 1)^*
&= 1^*((11^* \cup \ep1^*)^* \cup 1)^* \\
&= 1^*((11^* \cup 1^*)^* \cup 1)^* \\
&= 1^*((1^*)^* \cup 1)^* \\
&= 1^*(1^* \cup 1)^* \\
&= 1^*(1^*)^* \\
&= 1^*1^* \\
&= 1^* \\
\end{align*}

If you look at the original NFA, you will see that the language
accepted by the NFA is indeed $\{1\}^*$.


\newpage

\textbf{Example.}
Here's the NFA:

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,accepting] (q1) at (3,  0) {$q_1$};
\node[state,accepting,initial] (q0) at (0.0,  0) {$q_0$};
\node[state] (q3) at (9,  0) {$q_3$};
\node[state] (q2) at (6,  0) {$q_2$};

\path[->]
(q0) edge [loop above] node {$1$} ()
(q0) edge [bend left=44,pos=0.5,above] node {$1$} (q3)
(q1) edge [bend left=0,pos=0.5,above] node {$0$} (q2)
(q2) edge [bend left=31,pos=0.5,below] node {$\ep$} (q0)
(q2) edge [bend left=0,pos=0.5,above] node {$1,\ep$} (q3)
(q3) edge [bend left=44,pos=0.5,below] node {$0$} (q0)
(q3) edge [loop above] node {$0$} ()

;
\end{tikzpicture}
\end{center}
    
Here's the initial GNFA:

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (2.0,  0) {$q_0$};
\node[state] (n2) at (4.0,  0) {$q_1$};
\node[state] (n3) at (6.0,  0) {$q_2$};
\node[state] (n4) at (8.0,  0) {$q_3$};
\node[state,accepting] (n5) at (10.0,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$\ep $} (n1)
(n1) edge [loop above] node {$1$} ()
(n1) edge [bend left=44,pos=0.5,above] node {$1$} (n4)
(n1) edge [bend left=52,pos=0.5,above] node {$\ep $} (n5)
(n2) edge [bend left=0,pos=0.5,above] node {$0$} (n3)
(n2) edge [bend left=44,pos=0.5,above] node {$\ep $} (n5)
(n3) edge [bend left=31,pos=0.5,below] node {$\ep $} (n1)
(n3) edge [bend left=0,pos=0.5,above] node {$1\cup \ep $} (n4)
(n4) edge [bend left=44,pos=0.5,below] node {$0$} (n1)
(n4) edge [loop below] node {$0$} ()

;
\end{tikzpicture}
\end{center}
    


Each table below shows that computation of the resulting transistions
after removing a state $q_{kill}$.
In the third, fourth, and fifth columns,
\begin{align*}
r_1 &= \delta(q_i, q_{kill}) \\
r_2 &= \delta(q_{kill}, q_{kill}) \\
r_3 &= \delta(q_{kill}, q_j) \\
r_4 &= \delta(q_i, q_j)
\end{align*}


Removal of $q_{kill}$=$q_{0}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_1$ & $q_1$ & $\emptyset $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_1$ & $q_2$ & $\emptyset $ & $1$ & $\emptyset $ & $0$ & $0$ \\
$q_1$ & $q_3$ & $\emptyset $ & $1$ & $1$ & $\emptyset $ & $\emptyset $ \\
$q_1$ & $a$ & $\emptyset $ & $1$ & $\ep $ & $\ep $ & $\ep $ \\
$q_2$ & $q_1$ & $\ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $q_2$ & $\ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $q_3$ & $\ep $ & $1$ & $1$ & $1\cup \ep $ & $1^*1\cup 1\cup \ep $ \\
$q_2$ & $a$ & $\ep $ & $1$ & $\ep $ & $\emptyset $ & $1^*$ \\
$q_3$ & $q_1$ & $0$ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $q_2$ & $0$ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $q_3$ & $0$ & $1$ & $1$ & $0$ & $01^*1\cup 0$ \\
$q_3$ & $a$ & $0$ & $1$ & $\ep $ & $\emptyset $ & $01^*$ \\
$i$ & $q_1$ & $\ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_2$ & $\ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_3$ & $\ep $ & $1$ & $1$ & $\emptyset $ & $1^*1$ \\
$i$ & $a$ & $\ep $ & $1$ & $\ep $ & $\emptyset $ & $1^*$ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (2.0,  0) {$q_1$};
\node[state] (n2) at (5,  0) {$q_2$};
\node[state] (n3) at (9,  0) {$q_3$};
\node[state,accepting] (n4) at (12,  0) {a};

\path[->]
(n0) edge [bend left=44,pos=0.5,above] node {$1^*1$} (n3)
(n0) edge [bend left=52,pos=0.5,above] node {$1^*$} (n4)
(n1) edge [bend left=0,pos=0.5,above] node {$0$} (n2)
(n1) edge [bend left=44,pos=0.5,above] node {$\ep $} (n4)
(n2) edge [bend left=0,pos=0.5,above] node {$1^*1\cup 1\cup \ep $} (n3)
(n2) edge [bend left=31,pos=0.5,above] node {$1^*$} (n4)
(n3) edge [loop below] node {$01^*1\cup 0$} ()
(n3) edge [bend left=0,pos=0.5,above] node {$01^*$} (n4)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{1}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_2$ & $q_2$ & $\emptyset $ & $\emptyset $ & $0$ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $q_3$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $1^*1\cup 1\cup \ep $ & $1^*1\cup 1\cup \ep $ \\
$q_2$ & $a$ & $\emptyset $ & $\emptyset $ & $\ep $ & $1^*$ & $1^*$ \\
$q_3$ & $q_2$ & $\emptyset $ & $\emptyset $ & $0$ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $q_3$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $01^*1\cup 0$ & $01^*1\cup 0$ \\
$q_3$ & $a$ & $\emptyset $ & $\emptyset $ & $\ep $ & $01^*$ & $01^*$ \\
$i$ & $q_2$ & $\emptyset $ & $\emptyset $ & $0$ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_3$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $1^*1$ & $1^*1$ \\
$i$ & $a$ & $\emptyset $ & $\emptyset $ & $\ep $ & $1^*$ & $1^*$ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (4,  0) {$q_2$};
\node[state] (n2) at (8,  0) {$q_3$};
\node[state,accepting] (n3) at (12,  0) {a};

\path[->]
(n0) edge [bend left=31,pos=0.5,above] node {$1^*1$} (n2)
(n0) edge [bend left=44,pos=0.5,above] node {$1^*$} (n3)
(n1) edge [bend left=0,pos=0.5,above] node {$1^*1\cup 1\cup \ep $} (n2)
(n1) edge [bend left=31,pos=0.5,above] node {$1^*$} (n3)
(n2) edge [loop below] node {$01^*1\cup 0$} ()
(n2) edge [bend left=0,pos=0.5,above] node {$01^*$} (n3)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{2}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_3$ & $q_3$ & $\emptyset $ & $\emptyset $ & $1^*1\cup 1\cup \ep $ & $01^*1\cup 0$ & $01^*1\cup 0$ \\
$q_3$ & $a$ & $\emptyset $ & $\emptyset $ & $1^*$ & $01^*$ & $01^*$ \\
$i$ & $q_3$ & $\emptyset $ & $\emptyset $ & $1^*1\cup 1\cup \ep $ & $1^*1$ & $1^*1$ \\
$i$ & $a$ & $\emptyset $ & $\emptyset $ & $1^*$ & $1^*$ & $1^*$ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (4,  0) {$q_3$};
\node[state,accepting] (n2) at (8,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$1^*1$} (n1)
(n0) edge [bend left=31,pos=0.5,above] node {$1^*$} (n2)
(n1) edge [loop below] node {$01^*1\cup 0$} ()
(n1) edge [bend left=0,pos=0.5,above] node {$01^*$} (n2)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{3}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$i$ & $a$ & $1^*1$ & $01^*1\cup 0$ & $01^*$ & $1^*$ & $1^*1(01^*1\cup 0)^*01^*\cup 1^*$ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state,accepting] (n1) at (6,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$1^*1(01^*1\cup 0)^*01^*\cup 1^*$} (n1)

;
\end{tikzpicture}
\end{center}
    
Therefore the regex that generates the same language that
is accepted by the given NFA is
\[
1^*1(01^*1\cup 0)^*01^*\cup 1^*
\]


\newpage

\textbf{Example.}
Here's the NFA:

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (q1) at (3,  0) {$q_1$};
\node[state,initial] (q0) at (0.0,  0) {$q_0$};
\node[state,accepting] (q3) at (6,  0) {$q_3$};
\node[state,accepting] (q2) at (9,  0) {$q_2$};

\path[->]
(q0) edge [loop above] node {$1$} ()
(q0) edge [bend left=31,pos=0.5,above] node {$1$} (q2)
(q2) edge [bend left=35,pos=0.5,below] node {$0,1$} (q0)
(q2) edge [loop above] node {$0$} ()
(q3) edge [bend left=25,pos=0.5,below] node {$\ep$} (q0)
(q3) edge [bend left=0,pos=0.5,below] node {$\ep$} (q2)
(q3) edge [loop above] node {$1$} ()
;
\end{tikzpicture}
\end{center}
    
Here's the initial GNFA:

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (2.0,  0) {$q_0$};
\node[state] (n2) at (4.0,  0) {$q_1$};
\node[state] (n3) at (6.0,  0) {$q_2$};
\node[state] (n4) at (8.0,  0) {$q_3$};
\node[state,accepting] (n5) at (10.0,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$\ep $} (n1)
(n1) edge [loop above] node {$1$} ()
(n1) edge [bend left=31,pos=0.5,above] node {$1$} (n3)
(n3) edge [bend left=31,pos=0.5,below] node {$0\cup 1$} (n1)
(n3) edge [loop above] node {$0$} ()
(n3) edge [bend left=31,pos=0.5,above] node {$\ep $} (n5)
(n4) edge [bend left=44,pos=0.5,below] node {$\ep $} (n1)
(n4) edge [bend left=0,pos=0.5,below] node {$\ep $} (n3)
(n4) edge [loop below] node {$1$} ()
(n4) edge [bend left=0,pos=0.5,above] node {$\ep $} (n5)

;
\end{tikzpicture}
\end{center}
    


Each table below shows that computation of the resulting transistions
after removing a state $q_{kill}$.
In the third, fourth, and fifth columns,
\begin{align*}
r_1 &= \delta(q_i, q_{kill}) \\
r_2 &= \delta(q_{kill}, q_{kill}) \\
r_3 &= \delta(q_{kill}, q_j) \\
r_4 &= \delta(q_i, q_j)
\end{align*}


Removal of $q_{kill}$=$q_{0}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_1$ & $q_1$ & $\emptyset $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_1$ & $q_2$ & $\emptyset $ & $1$ & $1$ & $\emptyset $ & $\emptyset $ \\
$q_1$ & $q_3$ & $\emptyset $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_1$ & $a$ & $\emptyset $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $q_1$ & $0\cup 1$ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $q_2$ & $0\cup 1$ & $1$ & $1$ & $0$ & $(0\cup 1)1^*1\cup 0$ \\
$q_2$ & $q_3$ & $0\cup 1$ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $a$ & $0\cup 1$ & $1$ & $\emptyset $ & $\ep $ & $\ep $ \\
$q_3$ & $q_1$ & $\ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_3$ & $q_2$ & $\ep $ & $1$ & $1$ & $\ep $ & $1^*1\cup \ep $ \\
$q_3$ & $q_3$ & $\ep $ & $1$ & $\emptyset $ & $1$ & $1$ \\
$q_3$ & $a$ & $\ep $ & $1$ & $\emptyset $ & $\ep $ & $\ep $ \\
$i$ & $q_1$ & $\ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $q_2$ & $\ep $ & $1$ & $1$ & $\emptyset $ & $1^*1$ \\
$i$ & $q_3$ & $\ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $a$ & $\ep $ & $1$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (3,  0) {$q_1$};
\node[state] (n2) at (6,  0) {$q_2$};
\node[state] (n3) at (10,  0) {$q_3$};
\node[state,accepting] (n4) at (13,  0) {a};

\path[->]
(n0) edge [bend left=31,pos=0.5,above] node {$1^*1$} (n2)
(n2) edge [loop above] node {$(0\cup 1)1^*1\cup 0$} ()
(n2) edge [bend left=31,pos=0.5,above] node {$\ep $} (n4)
(n3) edge [bend left=0,pos=0.5,below] node {$1^*1\cup \ep $} (n2)
(n3) edge [loop below] node {$1$} ()
(n3) edge [bend left=0,pos=0.5,above] node {$\ep $} (n4)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{1}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_2$ & $q_2$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $(0\cup 1)1^*1\cup 0$ & $(0\cup 1)1^*1\cup 0$ \\
$q_2$ & $q_3$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$q_2$ & $a$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\ep $ & $\ep $ \\
$q_3$ & $q_2$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $1^*1\cup \ep $ & $1^*1\cup \ep $ \\
$q_3$ & $q_3$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $1$ & $1$ \\
$q_3$ & $a$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\ep $ & $\ep $ \\
$i$ & $q_2$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $1^*1$ & $1^*1$ \\
$i$ & $q_3$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $a$ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (4,  0) {$q_2$};
\node[state] (n2) at (8,  0) {$q_3$};
\node[state,accepting] (n3) at (12,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$1^*1$} (n1)
(n1) edge [loop below] node {$(0\cup 1)1^*1\cup 0$} ()
(n1) edge [bend left=31,pos=0.5,above] node {$\ep $} (n3)
(n2) edge [bend left=0,pos=0.5,below] node {$1^*1\cup \ep $} (n1)
(n2) edge [loop below] node {$1$} ()
(n2) edge [bend left=0,pos=0.5,above] node {$\ep $} (n3)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{2}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$q_3$ & $q_3$ & $1^*1\cup \ep $ & $(0\cup 1)1^*1\cup 0$ & $\emptyset $ & $1$ & $1$ \\
$q_3$ & $a$ & $1^*1\cup \ep $ & $(0\cup 1)1^*1\cup 0$ & $\ep $ & $\ep $ & $(1^*1\cup \ep )((0\cup 1)1^*1\cup 0)^*\cup \ep $ \\
$i$ & $q_3$ & $1^*1$ & $(0\cup 1)1^*1\cup 0$ & $\emptyset $ & $\emptyset $ & $\emptyset $ \\
$i$ & $a$ & $1^*1$ & $(0\cup 1)1^*1\cup 0$ & $\ep $ & $\emptyset $ & $1^*1((0\cup 1)1^*1\cup 0)^*$ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state] (n1) at (4,  0) {$q_3$};
\node[state,accepting] (n2) at (11,  0) {a};

\path[->]
(n0) edge [bend left=31,pos=0.5,above] node {$1^*1((0\cup 1)1^*1\cup 0)^*$} (n2)
(n1) edge [loop below] node {$1$} ()
(n1) edge [bend left=0,pos=0.5,above] node {$(1^*1\cup \ep )((0\cup 1)1^*1\cup 0)^*\cup \ep $} (n2)

;
\end{tikzpicture}
\end{center}
    
Removal of $q_{kill}$=$q_{3}$:
\begin{longtable}{|c|c|c|c|c|c|c|}
\hline
$q_i$ & $q_j$ & $r_1$ & $r_2$ & $r_3$ & $r_4$ & $r_1r_2^*r_3 \cup r_4$ \\
\hline

$i$ & $a$ & $\emptyset $ & $1$ & $(1^*1\cup \ep )((0\cup 1)1^*1\cup 0)^*\cup \ep $ & $1^*1((0\cup 1)1^*1\cup 0)^*$ & $1^*1((0\cup 1)1^*1\cup 0)^*$ \\
\hline
\end{longtable}

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (n0) at (0.0,  0) {i};
\node[state,accepting] (n1) at (6,  0) {a};

\path[->]
(n0) edge [bend left=0,pos=0.5,above] node {$1^*1((0\cup 1)1^*1\cup 0)^*$} (n1)

;
\end{tikzpicture}
\end{center}
    
Therefore the regex that generates the same language that
is accepted by the given NFA is
\[
1^*1((0\cup 1)1^*1\cup 0)^*
\]

If you look at the original NFA,

\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state] (q1) at (3,  0) {$q_1$};
\node[state,initial] (q0) at (0.0,  0) {$q_0$};
\node[state,accepting] (q3) at (6,  0) {$q_3$};
\node[state,accepting] (q2) at (9,  0) {$q_2$};

\path[->]
(q0) edge [loop above] node {$1$} ()
(q0) edge [bend left=31,pos=0.5,above] node {$1$} (q2)
(q2) edge [bend left=35,pos=0.5,below] node {$0,1$} (q0)
(q2) edge [loop above] node {$0$} ()
(q3) edge [bend left=25,pos=0.5,below] node {$\ep$} (q0)
(q3) edge [bend left=0,pos=0.5,below] node {$\ep$} (q2)
(q3) edge [loop above] node {$1$} ()
;
\end{tikzpicture}
\end{center}
and you remove the unreachable states, you would get
\begin{center}
\begin{tikzpicture}[shorten >=1pt,node distance=2cm,auto,initial text=]
\node[state,initial] (q0) at (0.0,  0) {$q_0$};
\node[state,accepting] (q2) at (9,  0) {$q_2$};

\path[->]
(q0) edge [loop above] node {$1$} ()
(q0) edge [bend left=31,pos=0.5,above] node {$1$} (q2)
(q2) edge [bend left=35,pos=0.5,below] node {$0,1$} (q0)
(q2) edge [loop above] node {$0$} ()
;
\end{tikzpicture}
\end{center}
You see that the most general path that reaches from $q_0$
to $q_2$ without leaving $q_2$ has a regex of
\[
1^*1
\]
Intuitively, after that, 
if you \textit{leave} $q_0$, you can still get back to 
$q_2$, if you do
\[
0
\]
or
\[
(0 \cup 1)1^*1
\]
Intuitively, the most general path is then
\[
1^*1 (0 \cup (0 \cup 1)1^*1)^*
\]
which is exactly what we get using the algorithm.


\newpage
To give a mathematical proof, all you need to do is 
follow the idea behind the above examples.

First you have to define mathematically the concept of a GNFA, 
together with language acceptance of an GNFA.

\begin{ex}
Define formally the concept of a GNFA and define what is meant a
a word begin accepted by a GNFA.
\end{ex}

Next, you have to prove that given a GNFA $N$,
the above operation of removing a state to obtain a new GNFA $N'$
does not change the language being accepted, i.e.,
\[
L(N') = L(N)
\]

You can then use induction on the number of states in a GNFA
to prove the original statement above.

\begin{ex}
Prove the main theorem of this section.
\end{ex}
