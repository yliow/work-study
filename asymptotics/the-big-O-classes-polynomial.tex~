\section{The big-O Classes: Polynomials}

I have already talked about constant functions
\[
f(n) = c = O(1)
\]
and polynomials of degree 1:
\[
f(n) = an + b = O(n)
\]
(see previous sections).

It's time to look at polynomial functions such as
\[
f(n) = 5n^{42} + n^5 + 1234n - 1
\]
and figure out a simple function $g(n)$ such that $f(n) = O(g(n))$.
In fact in the previous section, I talked about cases such as
\[
f(n) = n^3 + 1 = O(n^3)
\]
In this section, I'm going to settle the big-O question of
{\it all} polynomials.


\begin{thm} \mbox{}
 \begin{enumerate}
  \item[(a)] If $1 \leq a \leq b$, then $n^a = O(n^b)$.
  \item[(b)] If $p$ is a polynomial of degree $d$, then $p = O(n^d)$
  \item[(c)] If $c > 0$ is a constant, then $n^d = O(c^n)$.
 \end{enumerate}
\end{thm}

{\it Proof}

(a) For $n \geq 1$, since $b - a > 0$,
\[
n^{b - a} \geq 1
\]
Therefore
\[
n^a \leq n^a \cdot n^{b-a} = n^b 
\]
i.e.,
\[
|n^a| \leq C|n^{b}|
\]
where $C = 1$ and $n \geq N$ where $N = 1$.
Hence $n^a = O(n^b)$.

(b) If $p$ is a polynomial of degree $d$, then 
$p$ is of the form
\[
p = c_0 + c_1n + c_2n^2 + \cdots + c_d n^d
\]
where $c_i$ are constants.
From (a),
\[
n^i = O(n^d)
\]
for $i = 0, 1, 2, ..., d$.
From the Theorem 1e:
\[
c_i n^i = O(n^d)
\]
From Theorem 1g:
\[
c_0 + \cdots + c_dn^d = O(n^d)
\]
\qed



The following are some big-O asymptotic classes:
\[
O(1) \subset
O(n) \subset
O(n^2) \subset
O(n^3) \subset \cdots
\]
Every polynomial is of one of the above complexity classes.
For instance 
\[
f(n) = 5n^3 - 100n^2 + \frac{1}{2}n + 23 = O(n^3)
\]
Of course this $f(n)$ is also $O(n^r)$ for $r > 3$.

You might have a function that looks like this:
\[
f(n) = 7n^{2.7} + 5n^2 + 1
\]
i.e., the powers need not be integers.
In this case
\[
f(n) = 7n^{2.7} + 5n^2 + 1 = O(n^{2.7})
\]
since $n^{2.7}$ grows faster that $n^2$.

In general if $1 \leq r < s$, then
\[
O(n^r) \subset O(n^s)
\]

Note that the inclusion is strict, i.e., 
\[
O(n^r) \neq O(n^s)
\]
in other words there is a function $f(n)$ in $O(n^s)$ that is not in 
$O(n^r)$.


