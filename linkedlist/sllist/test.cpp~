#include <iostream>
#include "SinglyLinkedListNode.h"
#include "SinglyLinkedList.h"

std::ostream & operator<<(std::ostream & cout,
                          const SinglyLinkedListNode & node)
{
    cout << "<"
         << &node
         << ": "
         << node.get_data()
         << ", "
         << node.get_next()
         << ">";
    return cout;
}

std::ostream & operator<<(std::ostream & cout, 
                          const SinglyLinkedList & list)
{
    cout << '[';
    SinglyLinkedListNode * p = list.get_head();
    while (p != NULL)
    {
        cout << p->get_data();
        SinglyLinkedListNode * next = p->get_next();
        if (next != NULL)
        {
            cout << ", ";
        }
        p = next;
    }
    cout << ']';
    return cout;
}


int main()
{
    SinglyLinkedListNode node(5);
    std::cout << node << std::endl;
    
    SinglyLinkedList xs;
    std::cout << xs << '\n';
    for (int i = 5; i < 8; ++i)
    {
        xs.insert_head(i);
        std::cout << xs << '\n';
    }


    int ret = xs.remove_head();
    std::cout << ret << std::endl;
    std::cout << xs << '\n';
    
    ret = xs.remove_head();
    std::cout << ret << std::endl;
    std::cout << xs << '\n';
    
    ret = xs.remove_head();
    std::cout << ret << std::endl;
    std::cout << xs << '\n';
    
    xs.insert_tail(1);
    std::cout << xs << '\n';
    xs.insert_tail(2);
    std::cout << xs << '\n';
    xs.insert_tail(3);
    std::cout << xs << '\n';
    xs.insert_tail(4);
    std::cout << xs << '\n';
    xs.insert_head(0);
    std::cout << xs << '\n';

    xs.clear();
    std::cout << xs << '\n';
    
    xs.insert_tail(2);
    xs.insert_tail(3);
    xs.insert_tail(4);
    std::cout << xs << std::endl;
    SinglyLinkedList ys(xs);
    std::cout << xs << std::endl;
    

    xs.insert_tail(100);
    std::cout << xs << std::endl;
    ys = xs;
    std::cout << xs << std::endl;
    std::cout << ys << std::endl;
    
    std::cout << (xs == ys) << std::endl;


    std::cout << xs << std::endl;
    SinglyLinkedListNode * p = xs.find(4);
    std::cout << p->get_data() << std::endl;
    p = xs.find(2);
    std::cout << p->get_data() << std::endl;
    p = xs.find(100);
    std::cout << p->get_data() << std::endl;
    int a = xs.remove(p);
    std::cout << a << std::endl;
    std::cout << xs << std::endl;
    
    p = xs.find(2);
    std::cout << p->get_data() << std::endl;
    a = xs.remove(p);
    std::cout << a << std::endl;
    std::cout << xs << std::endl;
    
    p = xs.find(4);
    std::cout << p->get_data() << std::endl;
    a = xs.remove(p);
    std::cout << a << std::endl;
    std::cout << xs << std::endl;
    
    p = xs.find(3);
    std::cout << p->get_data() << std::endl;
    a = xs.remove(p);
    std::cout << a << std::endl;
    std::cout << xs << std::endl;
    
    xs.clear();
    std::cout << xs.size() << '\n';
    xs.insert_tail(5);
    std::cout << xs.size() << '\n';
    xs.insert_tail(6);
    std::cout << xs.size() << '\n';
    xs.insert_tail(7);
    std::cout << xs.size() << '\n';

    //std::cout << xs[3] << std::endl;

    std::cout << xs << std::endl;
    xs[0] = 100;
    std::cout << xs << std::endl;
    xs[1] = 200;
    std::cout << xs << std::endl;
    xs[2] = 300;
    std::cout << xs << std::endl;
    
    return 0;
}
